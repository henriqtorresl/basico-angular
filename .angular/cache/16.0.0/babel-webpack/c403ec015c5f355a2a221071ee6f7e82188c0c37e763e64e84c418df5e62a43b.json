{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ListService {\n  constructor() {}\n  // boa prática: como esse método faz relação com o método removeAnimal() da classe ListRender, eu coloco nome parecido entre os métodos\n  remove(animals, animal) {\n    return animals.filter(a => animal.name !== a.name);\n  }\n  add(animals, animal) {\n    animals.push(animal);\n  }\n}\nListService.ɵfac = function ListService_Factory(t) {\n  return new (t || ListService)();\n};\nListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListService,\n  factory: ListService.ɵfac,\n  providedIn: 'root'\n});\nexport { ListService };","map":{"version":3,"names":["ListService","constructor","remove","animals","animal","filter","a","name","add","push","factory","ɵfac","providedIn"],"sources":["C:\\Users\\CTS\\IdeaProjects\\basico-angular\\src\\app\\services\\list.service.ts"],"sourcesContent":["// um service normalmente faz requisições com a API (com o banco de dados)\n// como nn tenho banco de dados, esse service list vai trabalhar com os dados do componente list-render\nimport { Injectable } from '@angular/core';\n\nimport { Animal } from '../Animal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n\n  constructor() { }\n\n  // boa prática: como esse método faz relação com o método removeAnimal() da classe ListRender, eu coloco nome parecido entre os métodos\n  remove(animals: Animal[], animal: Animal) {\n    return animals.filter((a) => animal.name !== a.name);\n  }\n\n  add(animals: Animal[], animal: Animal) {\n    animals.push(animal);\n  }\n\n  getAll()\n}\n"],"mappings":";AAMA,MAGaA,WAAW;EAEtBC,YAAA,GAAgB;EAEhB;EACAC,MAAMA,CAACC,OAAiB,EAAEC,MAAc;IACtC,OAAOD,OAAO,CAACE,MAAM,CAAEC,CAAC,IAAKF,MAAM,CAACG,IAAI,KAAKD,CAAC,CAACC,IAAI,CAAC;EACtD;EAEAC,GAAGA,CAACL,OAAiB,EAAEC,MAAc;IACnCD,OAAO,CAACM,IAAI,CAACL,MAAM,CAAC;EACtB;;AAXWJ,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}