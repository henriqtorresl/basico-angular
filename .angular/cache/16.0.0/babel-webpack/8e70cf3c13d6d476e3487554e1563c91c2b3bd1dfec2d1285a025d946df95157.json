{"ast":null,"code":"import { __decorate } from \"tslib\";\n// um service normalmente faz requisições com a API (com o banco de dados)\n// como nn tenho banco de dados, esse service list vai trabalhar com os dados do componente list-render\nimport { Injectable } from '@angular/core';\nlet ListService = class ListService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3000/animals\";\n  }\n  // boa prática: como esse método faz relação com o método removeAnimal() da classe ListRender, eu coloco nome parecido entre os métodos\n  remove(animals, animal) {\n    return animals.filter(a => animal.name !== a.name);\n  }\n  add(animals, animal) {\n    animals.push(animal);\n  }\n  getAll() {}\n};\nListService = __decorate([Injectable({\n  providedIn: 'root'\n})], ListService);\nexport { ListService };","map":{"version":3,"names":["Injectable","ListService","constructor","http","apiUrl","remove","animals","animal","filter","a","name","add","push","getAll","__decorate","providedIn"],"sources":["C:\\Users\\CTS\\IdeaProjects\\basico-angular\\src\\app\\services\\list.service.ts"],"sourcesContent":["// um service normalmente faz requisições com a API (com o banco de dados)\n// como nn tenho banco de dados, esse service list vai trabalhar com os dados do componente list-render\nimport { Injectable } from '@angular/core';\n\nimport { Animal } from '../Animal';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n\n  private apiUrl = \"http://localhost:3000/animals\";\n\n  constructor(private http) { }\n\n  // boa prática: como esse método faz relação com o método removeAnimal() da classe ListRender, eu coloco nome parecido entre os métodos\n  remove(animals: Animal[], animal: Animal) {\n    return animals.filter((a) => animal.name !== a.name);\n  }\n\n  add(animals: Animal[], animal: Animal) {\n    animals.push(animal);\n  }\n\n  getAll(): Observable<Animal[]> {    // esse método vai preencher uma lista de Animal\n\n  }\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,UAAU,QAAQ,eAAe;AAW1C,IAAaC,WAAW,GAAxB,MAAaA,WAAW;EAItBC,YAAoBC,IAAI;IAAJ,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAEpB;EAE5B;EACAC,MAAMA,CAACC,OAAiB,EAAEC,MAAc;IACtC,OAAOD,OAAO,CAACE,MAAM,CAAEC,CAAC,IAAKF,MAAM,CAACG,IAAI,KAAKD,CAAC,CAACC,IAAI,CAAC;EACtD;EAEAC,GAAGA,CAACL,OAAiB,EAAEC,MAAc;IACnCD,OAAO,CAACM,IAAI,CAACL,MAAM,CAAC;EACtB;EAEAM,MAAMA,CAAA,GAEN;CACD;AAlBYZ,WAAW,GAAAa,UAAA,EAHvBd,UAAU,CAAC;EACVe,UAAU,EAAE;CACb,CAAC,C,EACWd,WAAW,CAkBvB;SAlBYA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}