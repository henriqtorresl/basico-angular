{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/list.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ItemDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" ID: \", ctx_r0.animal.id, \"\");\n  }\n}\nclass ItemDetailComponent {\n  constructor(listService, route) {\n    this.listService = listService;\n    this.route = route;\n    this.getAnimal(); // método que vai ser iniciado qnd o usuário entrar nessa rota\n  }\n\n  getAnimal() {\n    const id = Number(this.route.snapshot.paramMap.get(\"id\")); // obtendo o id da minha URL e convertendo ele para um number\n    this.listService.getItem(id).subscribe(animal => this.animal = animal);\n  }\n}\nItemDetailComponent.ɵfac = function ItemDetailComponent_Factory(t) {\n  return new (t || ItemDetailComponent)(i0.ɵɵdirectiveInject(i1.ListService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nItemDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemDetailComponent,\n  selectors: [[\"app-item-detail\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function ItemDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ItemDetailComponent_div_0_Template, 3, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.a);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ItemDetailComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","animal","id","ItemDetailComponent","constructor","listService","route","getAnimal","Number","snapshot","paramMap","get","getItem","subscribe","ɵɵdirectiveInject","i1","ListService","i2","ActivatedRoute","selectors","decls","vars","consts","template","ItemDetailComponent_Template","rf","ctx","ɵɵtemplate","ItemDetailComponent_div_0_Template","ɵɵproperty","a"],"sources":["C:\\Users\\CTS\\IdeaProjects\\basico-angular\\src\\app\\components\\item-detail\\item-detail.component.ts","C:\\Users\\CTS\\IdeaProjects\\basico-angular\\src\\app\\components\\item-detail\\item-detail.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Animal } from 'src/app/Animal';\n\nimport { ListService } from 'src/app/services/list.service';\n\n@Component({\n  selector: 'app-item-detail',\n  templateUrl: './item-detail.component.html',\n  styleUrls: ['./item-detail.component.css']\n})\nexport class ItemDetailComponent {\n\n  animal?: Animal;  // essa interrogação diz que o animal pode vir ou não\n\n  constructor(private listService:ListService, private route: ActivatedRoute) {\n    this.getAnimal();   // método que vai ser iniciado qnd o usuário entrar nessa rota\n  }\n\n  getAnimal() {\n    const id: number = Number(this.route.snapshot.paramMap.get(\"id\"));    // obtendo o id da minha URL e convertendo ele para um number\n    this.listService.getItem(id).subscribe((animal) => (this.animal = animal));\n  }\n\n}\n","<div *ngIf=\"a\">\n    <p> ID: {{ animal.id }}</p>\n</div>"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,UAAe;IACPD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAvBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,UAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,KAAmB;;;ADM3B,MAKaC,mBAAmB;EAI9BC,YAAoBC,WAAuB,EAAUC,KAAqB;IAAtD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,KAAK,GAALA,KAAK;IACxD,IAAI,CAACC,SAAS,EAAE,CAAC,CAAG;EACtB;;EAEAA,SAASA,CAAA;IACP,MAAML,EAAE,GAAWM,MAAM,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAI;IACtE,IAAI,CAACN,WAAW,CAACO,OAAO,CAACV,EAAE,CAAC,CAACW,SAAS,CAAEZ,MAAM,IAAM,IAAI,CAACA,MAAM,GAAGA,MAAO,CAAC;EAC5E;;AAXWE,mBAAmB,C;mBAAnBA,mBAAmB,EAAAT,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAtB,EAAA,CAAAoB,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAnBf,mBAAmB,C;QAAnBA,mBAAmB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZhC/B,EAAA,CAAAiC,UAAA,IAAAC,kCAAA,iBAEM;;;MAFAlC,EAAA,CAAAmC,UAAA,SAAAH,GAAA,CAAAI,CAAA,CAAO;;;;;;SDYA3B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}