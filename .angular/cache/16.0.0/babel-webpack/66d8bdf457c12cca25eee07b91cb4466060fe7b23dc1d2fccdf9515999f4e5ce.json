{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ListRenderComponent = class ListRenderComponent {\n  // dessa forma, o angular vai entender que eu estou criando um novo serviço e ele vem do ListService\n  constructor(listService) {\n    this.listService = listService;\n    this.animalDetails = \"\"; // iniciado como uma string vazia para não mostrar nada na tela caso o botão não seja apertado\n    this.animals = [{\n      name: \"Turca\",\n      type: \"Dog\",\n      age: 4\n    }, {\n      name: \"Tom\",\n      type: \"Cat\",\n      age: 10\n    }, {\n      name: \"Frida\",\n      type: \"Dog\",\n      age: 5\n    }, {\n      name: \"Bob\",\n      type: \"Horse\",\n      age: 1\n    }];\n    this.animal = {\n      name: \" \",\n      type: \" \",\n      age: 0\n    };\n  } // para poder trabalhar cm o service nessa classe, eu preciso criar um objeto do service dentro do meu construtor..\n  showAge(animal) {\n    // altera o valor do atributo animalDetails\n    this.animalDetails = `O pet ${animal.name} tem ${animal.age} ano(s)!`;\n  }\n  removeAnimal(animal) {\n    this.animals = this.listService.remove(this.animals, animal); // aqui nessa linha eu estou relacionando, fazendo o link do método do service com o método do componente\n  }\n\n  addAnimal(animal) {\n    this.listService.add(this.animals, animal);\n  }\n};\nListRenderComponent = __decorate([Component({\n  selector: 'app-list-render',\n  templateUrl: './list-render.component.html',\n  styleUrls: ['./list-render.component.css']\n})], ListRenderComponent);\nexport { ListRenderComponent };","map":{"version":3,"names":["Component","ListRenderComponent","constructor","listService","animalDetails","animals","name","type","age","animal","showAge","removeAnimal","remove","addAnimal","add","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\CTS\\IdeaProjects\\basico-angular\\src\\app\\components\\list-render\\list-render.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { Animal } from 'src/app/Animal';\n\nimport { ListService } from 'src/app/services/list.service';\n\n@Component({\n  selector: 'app-list-render',\n  templateUrl: './list-render.component.html',\n  styleUrls: ['./list-render.component.css']\n})\nexport class ListRenderComponent {\n\n  animalDetails: string = \"\";  // iniciado como uma string vazia para não mostrar nada na tela caso o botão não seja apertado\n\n  animals: Animal[] = [   // array de objetos (array de Animal)\n    {name: \"Turca\", type: \"Dog\", age: 4},\n    {name: \"Tom\", type: \"Cat\", age: 10},\n    {name: \"Frida\", type: \"Dog\", age: 5},\n    {name: \"Bob\", type: \"Horse\", age: 1},\n  ]\n\n  animal: Animal = {name: \" \", type: \" \", age: 0};\n\n   // dessa forma, o angular vai entender que eu estou criando um novo serviço e ele vem do ListService\n   constructor(private listService: ListService) {}  // para poder trabalhar cm o service nessa classe, eu preciso criar um objeto do service dentro do meu construtor..\n\n  showAge(animal: Animal): void {\n    // altera o valor do atributo animalDetails\n    this.animalDetails = `O pet ${animal.name} tem ${animal.age} ano(s)!`;\n  }\n\n  removeAnimal(animal: Animal) {   \n    this.animals = this.listService.remove(this.animals, animal);      // aqui nessa linha eu estou relacionando, fazendo o link do método do service com o método do componente\n  }\n\n  addAnimal(animal: Animal) {\n    this.listService.add(this.animals, animal);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWzC,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAa7B;EACAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAZhC,KAAAC,aAAa,GAAW,EAAE,CAAC,CAAE;IAE7B,KAAAC,OAAO,GAAa,CAClB;MAACC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAC,CAAC,EACpC;MAACF,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAE,CAAC,EACnC;MAACF,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAC,CAAC,EACpC;MAACF,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAC,CAAC,CACrC;IAED,KAAAC,MAAM,GAAW;MAACH,IAAI,EAAE,GAAG;MAAEC,IAAI,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAC,CAAC;EAGC,CAAC,CAAE;EAEnDE,OAAOA,CAACD,MAAc;IACpB;IACA,IAAI,CAACL,aAAa,GAAG,SAASK,MAAM,CAACH,IAAI,QAAQG,MAAM,CAACD,GAAG,UAAU;EACvE;EAEAG,YAAYA,CAACF,MAAc;IACzB,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACF,WAAW,CAACS,MAAM,CAAC,IAAI,CAACP,OAAO,EAAEI,MAAM,CAAC,CAAC,CAAM;EACrE;;EAEAI,SAASA,CAACJ,MAAc;IACtB,IAAI,CAACN,WAAW,CAACW,GAAG,CAAC,IAAI,CAACT,OAAO,EAAEI,MAAM,CAAC;EAC5C;CACD;AA5BYR,mBAAmB,GAAAc,UAAA,EAL/Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWjB,mBAAmB,CA4B/B;SA5BYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}